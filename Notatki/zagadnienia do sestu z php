Wykonanie skryptu PHP w wierszu poleceń umożliwia wywołanie:
    php -f plik.php 
    php plik.php

Do lokalnego wykonywania skryptów PHP potrzebny jest:
    interpreter

Do zdalnego wykonywania kodu PHP po stronie serwera WWW można użyć:
    interpreter
    dedykowanego modułu serwera

Aby wyprowadzić dane tekstowe, używamy:
    print()
    echo()
    echo
    
Po stronie serwera WWW kod PHP wykonywany jest w plikach:
    .php
    
Kod PHP powinien być ujęty w znaczniki:
    <?php ?>
    
Dane, które zmieniają bazę danych przesyłamy z formularza za pomocą metody: 
    POST
    
Po stronie serwera w skrypcie PHP dane z formularza logowania dostępne są: 
    w tablicy $_POST
    
Jeżeli chcemy wyszukać w serwisie WWW jakieś informacje, dane przesyłamy zazwyczaj w żądaniu:
    GET
    
Walidacja danych z formularzy polega na:
    używaniu odpowiednich atrybutów HTML5 w formularzach
    sprawdzaniu po stronie serwera, czy dane spełniają okreslone kryteria
    
Java Scriptu można użyć do walidacji danych:
    po stronie sserwera
    po stronie klienta
    
Sprawdzanie poprawności loginu i hasła to przykład:
    walidacji
    autentykacja

Do sprawdzenia, czy zmienna istnieje i nie jest wartością NULL użyjesz:
    isset()
    
Funkcja array_key_exists($key, $array) sprawdza:
    czy w tabeli istnieje podany klucz
    
Do sprawdzenia, czy zmienna nie istnieje lub jest równa FALSE użyjesz:
    empty()
    
Zaznacz funkcje PHP, które można użyć w sprawdzaniu poprawności przesyłanych danych:
    strlen()
    htmlspecialchars()
    trim()

Zmienne w PHP: 
    są tworzone w momencie pierwszego przypisania
    
Do tworzenia nowych zmiennych podczas wykonywania skryptu użyjemy zapisu:
    ${$zmienna} = 'wartosc'

Aby wartość zmiennej znalazła się w ciągu znakowym, użyjemy zapisu:
    "zmienna: $zmienna"
    "zmienna: {$tab['zmienna']}"
    
Jeżeli w formularzu HTML typu POST mamy pole o nazwie "kod", przesłaną wartość odczytamy za pomocą instrukcji:
    $_POST['kod']
    
Wpisz nazwę instrukcji PHP, która umożliwia przeglądanie elementów tablicy: *
    foreach
    
Dostęp do pierwszego elementu tablicy "dane" zdefiniowanej w klasie "Klasa" jako "public static" uzyskamy za pomocą: 
    Klasa::$dane[0]
    

    
    
